// Generated by CoffeeScript 1.6.3
(function() {
  window.app = window.app || {};

  window.app.Friends = Backbone.Collection.extend({
    model: window.app.Friend,
    url: '/me?fields=picture,friends.fields(id,name,gender,devices,picture)',
    comparator: function(friend) {
      return friend.get('name');
    },
    sync: function(method, model, options) {
      return window.FB.api(model.url, function(response) {
        if (!response || response.error) {
          options.error(response);
          return;
        }
        console.log('___FACEBOOK GRAPH DATA___');
        console.log(response);
        options.success(response.friends.data, response, options);
      });
    },
    search: function(searchText) {
      var filtered, pattern;
      pattern = new RegExp(searchText, 'i');
      filtered = this.filter(function(friend) {
        return pattern.test(friend.get('name'));
      });
      return new window.app.Friends(filtered);
    }
  });

  window.app.friends = new window.app.Friends();

  window.app.page = {
    page_defaults: {
      page: 1,
      currentPage: 1,
      perPage: 10
    },
    reset: function() {
      return this.info.currentPage = 1;
    },
    updatePageInfo: function(collection) {
      var currentPage, finish, start, totalFriends, totalPages;
      totalFriends = collection.models.length;
      totalPages = Math.ceil(totalFriends / this.page_defaults.perPage);
      currentPage = this.info != null ? this.info.currentPage : this.page_defaults.currentPage;
      start = currentPage * 10 !== 10 ? (currentPage - 1) * 10 : 0;
      finish = currentPage * 10;
      return this.info = {
        totalFriends: totalFriends,
        totalPages: totalPages,
        currentPage: currentPage,
        start: start,
        finish: finish
      };
    }
  };

  window.app.page = _.extend(window.app.page, Backbone.Events);

}).call(this);
